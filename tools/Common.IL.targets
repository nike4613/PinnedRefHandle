<?xml version="1.0" encoding="utf-8"?>
<Project>

  <ItemGroup>
    <None Include="@(Compile)" />
  </ItemGroup>

  <ItemGroup>
    <!-- mscorlib is passed in as an explicit reference from C# targets but not via the IL SDK. -->
    <Reference Include="$(CoreAssembly)" Condition="'$(IsNetCoreOrStandard)' != 'true'" />
  </ItemGroup>

  <Target Name="GenerateVersionFile" DependsOnTargets="GetAssemblyVersion;ResolveReferences;AddImplicitDefineConstants" Inputs="$(MSBuildAllProjects)" Outputs="'$(VersionFilePath)">
    <PropertyGroup>
      <IncludePath>$([MSBuild]::NormalizeDirectory('$(IntermediateOutputPath)', 'version'))</IncludePath>
      <IncludePathTrimmed>$(IncludePath.TrimEnd('\'))</IncludePathTrimmed>
      <IlasmFlags>$(IlasmFlags) -INCLUDE="$(IncludePathTrimmed)"</IlasmFlags>
      <VersionFilePath Condition="'$(VersionFilePath)' == ''">$([MSBuild]::NormalizePath('$(IncludePath)', 'version.h'))</VersionFilePath>
      <_AssemblyVersion>$(AssemblyVersion.Replace('.', ':'))</_AssemblyVersion>
      <_coreAssemblyName Condition="'%(ReferencePath.FileName)' == '$(CoreAssembly)'">%(ReferencePath.FusionName)</_coreAssemblyName>
      <_assemblyNamePattern><![CDATA[[^,]+, Version=(?<v1>[0-9]+)\.(?<v2>[0-9]+)\.(?<v3>[0-9]+)\.(?<v4>[0-9]+), .*PublicKeyToken=(?<p1>[0-9a-f]{2})(?<p2>[0-9a-f]{2})(?<p3>[0-9a-f]{2})(?<p4>[0-9a-f]{2})(?<p5>[0-9a-f]{2})(?<p6>[0-9a-f]{2})(?<p7>[0-9a-f]{2})(?<p8>[0-9a-f]{2})]]></_assemblyNamePattern>
      <_coreAssemblyVersion>
        <![CDATA[$([System.Text.RegularExpressions.Regex]::Replace(
        $(_coreAssemblyName),
        $(_assemblyNamePattern),
        '${v1}:${v2}:${v3}:${v4}'))]]>
      </_coreAssemblyVersion>
      <_coreAssemblyPublicKeyToken>$([System.Text.RegularExpressions.Regex]::Replace($(_coreAssemblyName),$(_assemblyNamePattern),'${p1} ${p2} ${p3} ${p4} ${p5} ${p6} ${p7} ${p8}').ToUpperInvariant())</_coreAssemblyPublicKeyToken>

      <ExtraMacros><![CDATA[#define ASSEMBLY_COPYRIGHT "{string('$(Copyright)')}";$(ExtraMacros)]]></ExtraMacros>
      <ExtraMacros><![CDATA[#define ASSEMBLY_NAME "{string('$(AssemblyName)')}";$(ExtraMacros)]]></ExtraMacros>
      <ExtraMacros><![CDATA[#define ASSEMBLY_COMPANY "{string('$(Authors)')}";$(ExtraMacros)]]></ExtraMacros>
      <ExtraMacros><![CDATA[#define ASSEMBLY_DESCRIPTION "{string('$(Description)')}";$(ExtraMacros)]]></ExtraMacros>
    </PropertyGroup>

    <ItemGroup>
      <_ExtraMacros Include="$(ExtraMacros)" />
      <_DefineConstants Include="$(DefineConstants);$(ImplicitFrameworkDefine)" />
    </ItemGroup>

    <ItemGroup>
      <_ExtraMacros Include="@(_DefineConstants->'#define %(Identity)')" />
    </ItemGroup>

    <PropertyGroup>
      <_VersionFileContents>
        <![CDATA[
#define CORE_ASSEMBLY "$(CoreAssembly)"
#define ASSEMBLY_VERSION "$(_AssemblyVersion)"
#define CORE_ASSEMBLY_VERSION "$(_CoreAssemblyVersion)"
#define FILE_VERSION "{string('$(FileVersion)')}"
#define INFORMATIONAL_VERSION "{string('$(InformationalVersion)')}"
#define CORE_PUBKEY_TOKEN "($(_coreAssemblyPublicKeyToken) )"
@(_ExtraMacros,'%0A')
#ifdef REFERENCE_CORE_ASSEMBLY
// Metadata version: v4.0.30319
.assembly extern CORE_ASSEMBLY
{
  .publickeytoken = CORE_PUBKEY_TOKEN
  .ver CORE_ASSEMBLY_VERSION
}
#endif
]]>
      </_VersionFileContents>
    </PropertyGroup>

    <WriteLinesToFile File="$(VersionFilePath)" Lines="$(_VersionFileContents)" Overwrite="true" WriteOnlyWhenDifferent="true" />

    <ItemGroup>
      <FileWrites Include="$(VersionFilePath)" />
    </ItemGroup>
  </Target>

  <!-- Decompile the ILResourceReference to get native resources. -->
  <Target Name="SetILResourceReference" BeforeTargets="DisassembleIlasmResourceFile" Condition="'@(ResolvedMatchingContract)' != ''">
    <ItemGroup>
      <ILResourceReference Include="@(ResolvedMatchingContract)" />
    </ItemGroup>
  </Target>

</Project>